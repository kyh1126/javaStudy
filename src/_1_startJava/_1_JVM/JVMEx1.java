package _1_startJava._1_JVM;

// OS는 자바 프로그램을 바로 실행할 수 없다. 완전한 기계어가 아닌, 중간 단계의 바이트 코드이기 때문. 이것을 해석하고 실행할 수 있는 가상의 OS가 필요하다.
// JVM(자바 가상 기계): 실 OS를 대신해서 자바 프로그램을 실행하는 가상의 OS 역할을 한다. 자바를 실행시키는 가상의 기계.
//                   바이트 코드는 모든 JVM 에서 동일 실행 결과를 보장하지만, JVM 은 OS 종속적이다.
//                   JVM 은 JDK 또는 JRE 를 설치하면 자동으로 설치된다.

// 소스 파일(*.java) --(컴파일러 javac.exe)--> 바이트 코드 파일(*.class) --(JVM 구동 java.exe)--> OS 에서 실행할 수 있는 기계어로 번역 후 실행.

// 자바의 큰 장점 중 하나인 한 번 작성하면 어디서든 실행된다 특징은 매력적이지만, 한 번의 컴파일링으로 실행 가능한 기게어가 만들어지지 않고 JVM 에 의해 기계어로
// 번역되고 실행되기 때문에, C, C++의 컴파일 단계에서 만들어지는 완전 기계어보다는 속도가 느리다.
// 그러나 기계어로 빠르게 변환해주는 JVM 내부의 최적화된 JIT 컴파일러를 통해 속도의 격차는 많이 줄어들고 있다.

// JRE = JVM + 표준 클래스 라이브러리(라이브러리 API)
// JDK = JRE + 개발에 필요한 도구(라이브러리 API, 컴파일러 등)
public class JVMEx1 {
}
