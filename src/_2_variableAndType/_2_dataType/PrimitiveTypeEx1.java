package _2_variableAndType._2_dataType;

// 기본(원시) 타입:   정수, 실수, 문자, 논리 리터럴을 직접 저장하는 타입
//                 최상위 비트(MSB) 제외한 나머지 bit 로 값 결정.
// -------------------------------------------------------------------------------
// 값의 종류    기본 타입   메모리사용크기     저장되는 값의 범위
// -------------------------------------------------------------------------------
// 정수       byte       1 byte       -2^7 ~ 2^7-1 (-128~127)                 : 색상 정보, 파일/이미지 등 이진(바이너리)데이터를 처리할 때 주로 사용.
//           char       2 byte          0 ~ 2^16-1                           : 하나의 유니코드를 저장하기 위한 타입.
//           short      2 byte      -2^15 ~ 2^15-1 (-32768~32767)            : C 언어와 호환을 위해 정수값을 저장할 수 있지만 잘 사용되지 않는다.
//           int        4 byte      -2^31 ~ 2^31-1                           : 정수 연산을 하기 위한 기본 타입.
//           long       8 byte      -2^63 ~ 2^63-1                           : int 저장 범위를 넘어서는 큰 정수는 반드시 l, "L" 을 붙여야 한다.
// ------------------------------------------------------------------------------- 정수 타입과 다른 저장 방식. +(부호)m(가수)*10^n(지수) (0 <= m < 1)
// 실수       float      4 byte   (+/-)1.4E-45  ~ (+/-)3.4028235E38           : 부호(1bit), 지수(8bit), 가수(23bit), f나 "F" 를 붙여야 한다.
//           double     8 byte   (+/-)4.9E-324 ~ (+/-)1.7976931348623157E308 : 부호(1bit), 지수(8bit), 가수(23bit), 실수 리터럴 기본 타입. 높은 정밀도 계산에서 사용.
// -------------------------------------------------------------------------------
// 논리       boolean    1 byte       true, false                             : 논리값 저장할 수 있는 데이터 타입.


public class PrimitiveTypeEx1 {
    public static void main(String[] args) {
        char c = 'A';
        int uniCode = c;

        System.out.println(uniCode);

        char a = ' ';    // String 같은 참조 타입과 달리 유니코드를 넣고 초기화 해야 한다. (공백 유니코드:32)
        String str = "";

        int oct = 012;  // 8진수
        int hex = 0xA;  // 16진수

//        long var = 10000000000;
        long var2 = 10000000000L;

//        float var3 = 3.14;
        float var4 = 3.14F;

        // e 사용하기
        int var5 = 3000000;
        double var6 = 3e6;
        float var7 = 3e6F;
        System.out.println("var6 " + var6);
        System.out.println("var7 " + var7);

        double var8 = 2e-3;
        System.out.println("var8 " + var8);
    }
}
